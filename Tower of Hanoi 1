/*
Tower of Hanoi is a mathematical puzzle where we have three rods and n disks. 
The objective of the puzzle is to move all disks from source rod to destination rod using the third rod (say auxiliary). 

The rules are:
Only one disk can be moved at a time.
A disk can be moved only if it is on the top of a rod.
No disk can be placed on the top of a smaller disk.

Print the steps required to move n disks from source rod to destination rod. 
Source Rod is named as 'a', auxiliary rod as 'b' and destination rod as 'c'. 
*/

import java.io.*;
import java.util.*;

public class Solution {
    static void hanoi(int n, char source, char inter, char destination){
        if(n==1)
            System.out.println("Disk "+n+" moved from "+source+" to "+destination);
        else{
            hanoi(n-1, source, destination, inter);
            System.out.println("Disk "+(n)+" moved from "+source+" to "+destination);
            hanoi(n-1, inter, source,destination);
        }
    }

    public static void main(String[] args) {
        Scanner sc=new Scanner(System.in);
        int n=sc.nextInt();
        hanoi(n,'A','B','C');
    }
}
