//WAP to implement queue data structure using array
//the program should contain functions like isEmpty, isFull, enqueue, dequeue, count and diaplay

import java.util.*;

class Queue1{
	int s[];
	int size;
	int front;
	int rear;
	
	Queue1(int size){
		this.size=size;
		s=new int[this.size];
		front=-1;
		rear=-1;
	}
	
	boolean isFull(){
		if (front==0 && rear==size-1)     //Queue is full only when it contains all the elements
			return true;
		else
			return false;
	}
	
	boolean isEmpty(){
		if(front ==-1)
			return true;
		return false;
	}

	int count(){
		int c=0;
		if(front==-1)
			return c;
		for(int i=front; i<=rear; i++){
			c++;
		}
		return c;
	}

	void enqueue(int data){
		if(this.isEmpty()){
			front++;
			s[++rear]=data;
		}
		else if(rear+1==size)
			System.out.println("Queue is full. "+data+" is not added");
		else
			s[++rear]=data;
	}
	
	int dequeue(){
		if(this.isEmpty()){
			System.out.println("Queue is empty. Cannot dequeue.");
			return -1;
		}
		else {
			if(front>=rear){
				int data=s[front];
				front=-1;
				rear=-1;
				return data;
			}
			else
				return s[front++];
		}
			
	}
	
	void display(){
		if(isEmpty()){
			System.out.println("Queue is empty!");
			return;
		}
		else{
			System.out.print("Front--> ");
			for(int i=front; i<=rear; i++)
				System.out.print(s[i]+" ");
			System.out.println();
		}
	}
}

class QueueDemo{
	public static void main(String args[]){
		Scanner sc=new Scanner(System.in);
		Queue1 q=new Queue1(5);
		char cont='y';
		int choice;
		while(cont=='y' || cont=='Y'){
			System.out.println("\t1. Enqueue\t2. Dequeue\t3. Display\t4. Count");
			System.out.print("Enter your choice:");
			choice=sc.nextInt();
			switch (choice){
				case 1:
					System.out.print("Enter the element to add: ");
					q.enqueue(sc.nextInt());
					break;
				case 2:	q.dequeue(); break;
				case 3:	q.display(); break;
				case 4: System.out.println("There are "+q.count()+" elements"); break;					
				default:
					System.out.println("Wrong choice!");
			}
			System.out.print("Do you wish to continue (Y/N): ");
			cont=sc.next().charAt(0);
		}
	}
}
